on:
  workflow_dispatch:

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm install

      - name: Build project
        run: npm run build

      - name: Create Debian package
        run: |
          VERSION=$(jq -r '.version' ./package.json)

          mkdir -p "prague-${VERSION}"
          cp -r ./DEBIAN "prague-${VERSION}"

          mkdir -p "prague-${VERSION}/usr/local/src/prague"
          cp ./_dist/* "prague-${VERSION}/usr/local/src/prague"

          dpkg-deb --build "prague-${VERSION}"

      - name: "Create release"
        uses: "actions/github-script@v7"
        with:
          script: |
            const fs = require('fs');
            const path = './package.json';

            const version = JSON.parse(fs.readFileSync(path, 'utf8')).version;

            const tagResponse = await github.rest.git.createTag({
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag: version,
              message: `v${version}`,
              object: context.sha,
              type: 'commit'
            });
            const releaseResponse = await github.rest.repos.createRelease({
              draft: false,
              generate_release_notes: false,
              name: version,
              owner: context.repo.owner,
              prerelease: false,
              repo: context.repo.repo,
              tag_name: version
            });
            const fileName = `prague_${version}.deb`;
            const debFileContent = fs.readFileSync(fileName);
            await github.rest.repos.uploadReleaseAsset({
              url: releaseResponse.data.upload_url,
              headers: {
                'content-type': 'application/octet-stream',
                'content-length': debFileContent.length,
              },
              name: fileName,
              data: debFileContent,
            });
